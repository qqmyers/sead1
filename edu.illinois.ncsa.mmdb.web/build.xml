<?xml version="1.0" encoding="UTF-8"?>
<!--
    University of Illinois/NCSA
    Open Source License
   
    Copyright (c) 2010 , NCSA.  All rights reserved.
   
    Developed by:
    Cyberenvironments and Technologies (CET)
    http://cet.ncsa.illinois.edu/
   
    National Center for Supercomputing Applications (NCSA)
    http://www.ncsa.illinois.edu/
   
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal with the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
   
    - Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimers.
    - Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimers in the
      documentation and/or other materials provided with the distribution.
    - Neither the names of CET, University of Illinois/NCSA, nor the names
      of its contributors may be used to endorse or promote products
      derived from this Software without specific prior written permission.
   
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR
    ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
    CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.
 -->

<project name="medici" default="war" basedir=".">

	<property environment="env" />

	<property name="webxml" value="web.xml" />
		<property name="tupelo" value="/var/lib/hudson/jobs/tupelo/lastSuccessful" />	<available file="${tupelo}" type="dir" property="tupelo.present"/>
	<property name="deploy" value="/var/lib/tomcat6/webapps" />

	<property name="war" value="${ant.project.name}.war" />
	
	<property name="debug" value="true" />
	
	<property name="deprecation" value="true" />
		
	<property name="version" value="v1.2.100#${env.BUILD_NUMBER}" />
		
	<condition property="deps" value=".." else="../plugins">
		<available file="../edu.uiuc.ncsa.cet.bean/build.properties" />
	</condition>		
	
	<available file="war/mmdb.tmp" property="mmdb_tmp_exists" />

	<path id="classpath">
		<pathelement path="build" />
		<pathelement path="src" />
		<fileset dir="war/WEB-INF/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="gwt">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="clean" description="deletes all generated files">
		<delete dir="war/mmdb" />
		<delete dir="war/WEB-INF/classes" />
		<delete dir="${war}" />
	</target>

	<target name="hudson" depends="clean, cetbean, prepare-hudson, sead, war" />

	<target name="prepare-hudson" depends="resources, copy_mmdb_html" description="setup for hudson build and deployment">
		<copy file="war/mmdb.tmp" tofile="war/mmdb.html" overwrite="true">
			<filterset>
				<filter token="VERSION" value="${version}" />
			</filterset>
		</copy>
	</target>

	<target name="mmdb-dev" depends="resources" description="setup for hudson build and deployment">
		<copy tofile="war/WEB-INF/classes/log4j.properties" file="src/log4j_tomcat.properties" />
		<copy tofile="war/WEB-INF/classes/nopreview-100.gif" file="src/nopreview-100.gif"/>
		<copy tofile="war/WEB-INF/classes/preview-100.gif" file="src/preview-100.gif"/>
		<copy tofile="war/WEB-INF/classes/preview-500.gif" file="src/preview-500.gif"/>
		<replace file="war/WEB-INF/classes/server.properties" token="#search.path=" value="search.path=/home/medici/medici/lucene" />
		<replace file="war/WEB-INF/classes/server.properties" token="#hfc.path=" value="hfc.path=/home/medici/medici/data" />
	</target>
	
	<target name="sead" depends="resources" description="setup for hudson build and deployment">
		<copy tofile="war/WEB-INF/classes/log4j.properties" file="src/log4j_tomcat.properties" overwrite="true" />
		<copy tofile="war/mmdb/public.properties" file="src/sead.public-properties" overwrite="true" />
		<copy tofile="war/WEB-INF/classes/server.properties" file="src/sead.server-properties" overwrite="true" />
		<copy tofile="war/WEB-INF/classes/nopreview-100.gif" file="src/nopreview-100.gif"/>
		<copy tofile="war/WEB-INF/classes/preview-100.gif" file="src/preview-100.gif"/>
		<copy tofile="war/WEB-INF/classes/preview-500.gif" file="src/preview-500.gif"/>
	</target>
	
	<!-- copy the tupelo jar files -->
	<target name="tupelo" description="Copy the latest tupelo jars" if="tupelo.present">
		<delete>
			<fileset dir="war/WEB-INF/lib" includes="**/tupelo*.jar"/>
		</delete>
		<copy todir="war/WEB-INF/lib" preservelastmodified="true" overwrite="true" verbose="true" flatten="true">
			<fileset dir="${tupelo}">
				<include name="**/tupelo-client-*.jar" />
				<include name="**/tupelo-jena-*.jar" />
				<include name="**/tupelo-kernel-*.jar" />
				<include name="**/tupelo-mysql-*.jar" />
				<include name="**/tupelo-rdf-ntriples-*.jar" />
				<include name="**/tupelo-server-*.jar" />
				<include name="**/tupelo-sparql-*.jar" />
				<include name="**/tupelo-sql-*.jar" />
				<include name="**/tupelo-util-*.jar" />
				<exclude name="**/tupelo*-tests.jar" />
			</fileset>
		</copy>
	</target>
		
	<!-- make sure we have the latest beans -->
	<target name="cetbean" description="Compile CET beans.">
		<delete>
			<fileset dir="war/WEB-INF/lib" includes="**/cet-bean*.jar"/>
		</delete>
		
		<!-- compile the CET beans -->
		<delete dir="beanclass" />
		<mkdir dir="beanclass" />
		<javac destdir="beanclass" source="1.5" target="1.5" deprecation="${deprecation}" debug="${debug}">
			<src path="${deps}/edu.uiuc.ncsa.cet.bean/src" />
			<exclude name="**/sdl/**/*.java" />
			<exclude name="**/jre/**/*.java" />
		</javac>
		<jar jarfile="war/WEB-INF/lib/cet-bean.jar">
			<fileset dir="beanclass" />
			<fileset dir="${deps}/edu.uiuc.ncsa.cet.bean/src/main/java">
				<exclude name="**/sdl/**/*.java" />
			</fileset>
		</jar>

		<!-- compile the CET beans tupelo -->
		<delete dir="beanclass" />
		<mkdir dir="beanclass" />
		<javac destdir="beanclass" source="1.5" target="1.5" deprecation="${deprecation}" debug="${debug}">
			<src path="${deps}/edu.uiuc.ncsa.cet.bean.tupelo/src" />
			<classpath>
				<fileset dir="war/WEB-INF/lib" includes="*.jar" />
			</classpath>
			<exclude name="**/sdl/**/*.java" />
		</javac>
		<jar jarfile="war/WEB-INF/lib/cet-bean-tupelo.jar" basedir="beanclass" />

		<!-- remove the temp folder -->
		<delete dir="beanclass" />
	</target>

	<target name="copy_mmdb_html" unless="mmdb_tmp_exists">
		<copy file="war/mmdb.html" tofile="war/mmdb.tmp" />
	</target>

	<target name="compile" depends="resources" description="compiles Java source files to bytecode">
		<javac srcdir="src" includes="**" encoding="utf-8" destdir="war/WEB-INF/classes" source="1.5" target="1.5" deprecation="${deprecation}" debug="${debug}">
			<classpath refid="classpath" />
		</javac>
	</target>

	<target name="gwtc" depends="compile" description="compiles Java source files to JavaScript">
		<!-- Consider adding -Xms256m -Xmx512m to improve performance. -->
		<java classname="com.google.gwt.dev.Compiler" classpathref="classpath" fork="true" failonerror="true">
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx512m" />
			<!-- <arg line="-style OBFUSCATE" /> -->
			<arg value="edu.illinois.ncsa.mmdb.web.MMDB" />
		</java>
		<java classname="com.google.gwt.dev.Compiler" classpathref="classpath" fork="true" failonerror="true">
			<jvmarg value="-Xms256m" />
			<jvmarg value="-Xmx512m" />
			<!-- <arg line="-style OBFUSCATE" /> -->
			<arg value="edu.illinois.ncsa.mmdb.web.Embed" />
		</java>
	</target>

	<target name="resources" description="Copy all resources to output folder.">
		<mkdir dir="war/WEB-INF/classes" />
		<copy todir="war/WEB-INF/classes">
			<fileset dir="src">
				<include name="commons-logging.properties" />
				<include name="server.properties" />
				<include name="taxonomy.owl" />
			</fileset>
		</copy>
		<copy tofile="war/WEB-INF/classes/nopreview-100.gif" file="src/nopreview-100.gif"/>
		<copy tofile="war/WEB-INF/classes/preview-100.gif" file="src/preview-100.gif"/>
		<copy tofile="war/WEB-INF/classes/preview-500.gif" file="src/preview-500.gif"/>
	</target>

	<target name="deploy" depends="war" description="deploys the war file to Tomcat">
		<copy file="${war}" todir="${deploy}" />
	</target>

	<target name="war" depends="clean, compile, gwtc, resources" description="builds the war file">
		<zip destfile="${war}" basedir="war" >
			<exclude name="WEB-INF/deploy/**" />
			<exclude name="WEB-INF/lib/gwt-user*.jar" />
			<exclude name="WEB-INF/lib/gwt-dev-*.jar" />
			<exclude name="WEB-INF/lib/gwt-servlet.jar" />
			<exclude name="WEB-INF/lib/commons-logging-*.jar" />
			<exclude name="WEB-INF/lib/mysql-connector-java-*.jar" />
			<exclude name="WEB-INF/lib/xercesImpl-*.jar" />
		</zip>
	</target>
</project>

